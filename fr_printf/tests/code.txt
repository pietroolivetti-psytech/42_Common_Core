/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_printf.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pileonar <pileonar@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/29 13:13:56 by pileonar          #+#    #+#             */
/*   Updated: 2025/04/30 11:05:41 by pileonar         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_printf.h"

static int	check_print(va_list args, const char *format)
{
	if (*format == 'c')
		return (printf_char(va_arg(args, int)));
	else if (*format == '%')
		return (printf_perc());
	else if (*format == 's')
		return (printf_str(va_arg(args, char *)));
	else if (*format == 'd' || *format == 'i')
		return (printf_putnbr(va_arg(args, int)));
	else if (*format == 'u')
		return (printf_unsigned(va_arg(args, unsigned int)));
	else if (*format == 'x' || *format == 'X')
		return (printf_hexa(va_arg(args, unsigned int), *format));
	else if (*format == 'p')
		return (printf_pointer(va_arg(args, void *)));
	return (-1);
}

static int	handle_format(va_list args, const char **format)
{
	int	tct;

	tct = check_print(args, ++(*format));
	if (tct == -1)
		return (-1);
	return (tct);
}

int	ft_printf(const char *format, ...)
{
	int		ct;
	int		tct;
	va_list	args;

	va_start(args, format);
	ct = 0;
	while (*format)
	{
		if (*format == '%')
		{
			tct = handle_format(args, &format);
			if (tct == -1)
				return (-1);
			ct += tct;
		}
		else
		{
			printf_char(*format);
			ct++;
		}
		format++;
	}
	va_end(args);
	return (ct);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_printf.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pileonar <pileonar@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/29 13:14:03 by pileonar          #+#    #+#             */
/*   Updated: 2025/04/30 12:25:02 by pileonar         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef FT_PRINTF_H
# define FT_PRINTF_H

# include <stdarg.h>
# include <unistd.h>
# include <stdlib.h>

int		ft_printf(const char *format, ...);
int		printf_char(int c);
int		printf_perc(void);
int		printf_str(char *str);
int		count_int(int n);
int		printf_putnbr(int n);
int		printf_unsigned(unsigned int un);
int		printf_uchar(unsigned int c);
int		printf_hexa(unsigned int n, char x);
int		printf_pointer(void *p);
int		printf_u_long_ptr(unsigned long p);

#endif
CC = cc
NAME = libftprintf.a

SRCS = ft_printf.c utils.c unsigned_utils.c
FLAGS = -Wall -Wextra -Werror
OBJS = $(SRCS:.c=.o)
LIB = ar -rcs
RM = rm -f 

#Obj creation
%.o: %.c
	$(CC) $(FLAGS) -c $<
#linking creation
$(NAME): $(OBJS)
	$(LIB) $(NAME) $(OBJS)

all: $(NAME)
clean: 
	$(RM) $(OBJS)
fclean:
	$(RM) $(NAME) $(OBJS)
re: fclean all

.PHONY:	all clean fclean re/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   unsigned_utils.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pileonar <pileonar@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/29 13:14:15 by pileonar          #+#    #+#             */
/*   Updated: 2025/04/30 16:27:18 by pileonar         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_printf.h"

int	printf_uchar(unsigned int c)
{
	write(1, &c, 1);
	return (1);
}

int	printf_unsigned(unsigned int un)
{
	int				ct;
	unsigned int	nc;

	ct = 0;
	if (un > 9)
		ct += printf_unsigned(un / (unsigned int)10);
	nc = (un % (unsigned int)10) + (unsigned int)48;
	ct += printf_uchar(nc);
	return (ct);
}

int	printf_hexa(unsigned int n, char x)
{
	char	*basis;
	int		ct;
	int		hex_digit;

	ct = 0;
	if (x == 'x')
		basis = "0123456789abcdef";
	else
		basis = "0123456789ABCDEF";
	if (n >= 16)
		ct += printf_hexa(n / 16, x);
	hex_digit = n % 16;
	ct += 1;
	write(1, &basis[hex_digit], 1);
	return (ct);
}

int	printf_pointer(void *p)
{
	int	ct;

	ct = 0;
	if (p == 0)
		ct = write(1, "(nil)", 5);
	else
	{
		ct += write(1, "0x", 2);
		ct += printf_u_long_ptr((unsigned long)p);
	}
	return (ct);
}

int	printf_u_long_ptr(unsigned long p)
{
	int		ct;
	char	*basis;
	int		last_digit;

	basis = "0123456789abcdef";
	ct = 0;
	if (p >= 16)
		ct += printf_u_long_ptr(p / 16);
	last_digit = p % 16;
	ct += write(1, &basis[last_digit], 1);
	return (ct);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   utils.c                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pileonar <pileonar@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/29 13:14:20 by pileonar          #+#    #+#             */
/*   Updated: 2025/04/29 14:27:17 by pileonar         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_printf.h"

int	printf_char(int c)
{
	write(1, &c, 1);
	return (1);
}

int	printf_perc(void)
{
	write (1, "%", 1);
	return (1);
}

int	printf_str(char *str)
{
	int	ct;

	ct = 0;
	if (str == NULL)
		str = "(null)";
	while (str[ct])
	{
		write(1, &str[ct], 1);
		ct++;
	}
	return (ct);
}

int	count_int(int n)
{
	long	nn;
	size_t	ct;

	nn = n;
	ct = 0;
	if (nn < 0)
	{
		nn *= -1;
		ct++;
	}
	while (nn > 9)
	{
		nn /= 10;
		ct++;
	}
	if (nn >= 0 && nn <= 9)
		ct++;
	return (ct);
}

int	printf_putnbr(int n)
{
	char	nc;
	long	nn;
	int		ct;

	ct = 0;
	nn = n;
	if (nn < 0)
	{
		ct += printf_char('-');
		nn *= -1;
	}
	if (nn > 9)
		ct += printf_putnbr(nn / 10);
	nc = (nn % 10) + 48;
	ct += printf_char(nc);
	return (ct);
}
